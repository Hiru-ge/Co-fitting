"""
Django settings for Co_fitting project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import environ
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 環境変数の読み込み
env = environ.Env(
    DEBUG=(bool, False),
    STATIC_URL=(str, "/static/"),
    STATIC_ROOT=(str, "/var/www/html/Co_fitting/static/")
)
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

SECRET_KEY = env('SECRET_KEY')

DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('DJANGO_ALLOWED_HOSTS').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'articles',
    'recipes',
    'users',
    'purchase',
    'django_recaptcha',
]

# 環境変数から `USE_DJANGO_EXTENSIONS` を取得（デフォルトは False）
USE_DJANGO_EXTENSIONS = os.getenv("USE_DJANGO_EXTENSIONS", "False").lower() in ("true", "1")

if USE_DJANGO_EXTENSIONS:
    INSTALLED_APPS.append("django_extensions")

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Co_fitting.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'Co_fitting', 'static', 'templates'),  # 共通テンプレート用ディレクトリ
            os.path.join(BASE_DIR, 'users', 'static', 'templates'),  # 既存のテンプレートディレクトリ
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Co_fitting.wsgi.application'

# userには、こちらで拡張したカスタムユーザーモデルを使う
AUTH_USER_MODEL = 'users.User'

# ログイン周りのリダイレクト先
LOGIN_URL = '/users/login'
LOGIN_REDIRECT_URL = '/mypage'
LOGOUT_REDIRECT_URL = '/users/login'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'Co_fitting',
        'USER': 'root',
        'PASSWORD': env('DATABASE_KEY'),
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8mb4',
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"

if DEBUG:
    # 開発環境: 各アプリケーションのstaticディレクトリを使用
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'recipes', 'static'),
        os.path.join(BASE_DIR, 'users', 'static'),
    ]
else:
    # 本番環境: collectstaticで集約されたファイルを使用
    STATIC_ROOT = env('STATIC_ROOT', default="/var/www/html/Co_fitting/static/")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# メール送信用の設定
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  # アプリパスワード
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# ログ取得用の設定

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "ERROR",
            "class": "logging.FileHandler",
            "filename": env('LOG_FILE'),
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "ERROR",
            "propagate": True,
        },
        "django_recaptcha": {
            "handlers": [],
            "level": "CRITICAL",
            "propagate": False,
        },
    },
}

# SSL
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 31536000  # HSTSの有効期限（1年）
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# テスト環境ではSECURE_SSL_REDIRECTを無効化
# こうしないとリダイレクト関係のテストが通らない
if 'test' in sys.argv:
    SECURE_SSL_REDIRECT = False

# reCAPTCHA設定
RECAPTCHA_PUBLIC_KEY = env('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = env('RECAPTCHA_PRIVATE_KEY')
RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0.5
RECAPTCHA_USE_SSL = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Stripe設定
STRIPE_API_KEY = env('STRIPE_API_KEY')
STRIPE_PRICE_ID = env('STRIPE_PRICE_ID')
